from flask import Flask, request, redirect, jsonify
import requests
import os
import json
from datetime import datetime

app = Flask(__name__)

CLIENT_ID = os.getenv("BITRIX_CLIENT_ID")
CLIENT_SECRET = os.getenv("BITRIX_CLIENT_SECRET")
BITRIX_DOMAIN = "https://dom.mesopharm.ru"
REDIRECT_URI = "https://bitrix-bot-537z.onrender.com/oauth/bitrix/callback"


# üß† –õ–æ–≥ –≤—Å–µ—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
@app.before_request
def log_request_info():
    print("\n--- üì© –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å ---")
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now()}")
    print(f"‚û°Ô∏è –ú–µ—Ç–æ–¥: {request.method}")
    print(f"‚û°Ô∏è URL: {request.url}")
    if request.data:
        print(f"‚û°Ô∏è –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞: {request.data.decode('utf-8', errors='ignore')}")
    print("----------------------\n")


# üü¢ –ö–æ—Ä–Ω–µ–≤–æ–π –º–∞—Ä—à—Ä—É—Ç (–ë–∏—Ç—Ä–∏–∫—Å —à–ª—ë—Ç POST —Å—é–¥–∞)
@app.route("/", methods=["GET", "POST"])
def root():
    """
    –ë–∏—Ç—Ä–∏–∫—Å –≤—ã–∑—ã–≤–∞–µ—Ç —ç—Ç–æ—Ç –ø—É—Ç—å –ø—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è.
    """
    if request.method == "POST":
        domain = request.args.get("DOMAIN")
        app_sid = request.args.get("APP_SID")
        print(f"üì¶ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è —Å –¥–æ–º–µ–Ω–∞: {domain}, APP_SID={app_sid}")
        return "‚úÖ –ü—Ä–∏–ª–æ–∂–µ–Ω–∏–µ –ø–æ–ª—É—á–∏–ª–æ POST-–∑–∞–ø—Ä–æ—Å –æ—Ç Bitrix", 200

    return "‚úÖ Bitrix Bot Server —Ä–∞–±–æ—Ç–∞–µ—Ç!"


# üöÄ –†—É—á–Ω–∞—è —É—Å—Ç–∞–Ω–æ–≤–∫–∞ (GET)
@app.route("/install")
def install():
    if not CLIENT_ID:
        return "–û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BITRIX_CLIENT_ID –Ω–µ –∑–∞–¥–∞–Ω–∞", 500

    auth_url = (
        f"{BITRIX_DOMAIN}/oauth/authorize/"
        f"?client_id={CLIENT_ID}"
        f"&response_type=code"
        f"&redirect_uri={REDIRECT_URI}"
    )
    print(f"üîó –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é: {auth_url}")
    return redirect(auth_url)


# üîÑ Callback –æ—Ç Bitrix (GET –∏–ª–∏ POST)
@app.route("/oauth/bitrix/callback", methods=["GET", "POST"])
def oauth_callback():
    code = request.args.get("code") or request.form.get("code")

    if not code:
        return "‚ùå –û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä code", 400

    token_url = f"{BITRIX_DOMAIN}/oauth/token/"

    data = {
        "grant_type": "authorization_code",
        "client_id": CLIENT_ID,
        "client_secret": CLIENT_SECRET,
        "redirect_uri": REDIRECT_URI,
        "code": code,
    }

    print(f"üîë –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞: {token_url}")
    try:
        r = requests.post(token_url, data=data, timeout=10)
        print(f"üì® –û—Ç–≤–µ—Ç Bitrix: {r.text}")
        result = r.json()

        # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω
        with open("token.json", "w", encoding="utf-8") as f:
            json.dump(result, f, ensure_ascii=False, indent=2)

        return jsonify(result)
    except Exception as e:
        return jsonify({"error": str(e)}), 500


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
