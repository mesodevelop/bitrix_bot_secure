from flask import Flask, request, redirect, jsonify
import requests
import os
import json
from datetime import datetime

app = Flask(__name__)

CLIENT_ID = os.getenv("BITRIX_CLIENT_ID")
CLIENT_SECRET = os.getenv("BITRIX_CLIENT_SECRET")
BITRIX_DOMAIN = "https://dom.mesopharm.ru"
REDIRECT_URI = "https://bitrix-bot-537z.onrender.com/oauth/bitrix/callback"


# üß† –£–Ω–∏–≤–µ—Ä—Å–∞–ª—å–Ω—ã–π –ª–æ–≥–≥–µ—Ä –≤—Å–µ—Ö –≤—Ö–æ–¥—è—â–∏—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
@app.before_request
def log_request_info():
    print("\n--- üì© –ù–æ–≤—ã–π –∑–∞–ø—Ä–æ—Å ---")
    print(f"‚è∞ –í—Ä–µ–º—è: {datetime.now()}")
    print(f"‚û°Ô∏è –ú–µ—Ç–æ–¥: {request.method}")
    print(f"‚û°Ô∏è URL: {request.url}")
    print(f"‚û°Ô∏è –ó–∞–≥–æ–ª–æ–≤–∫–∏: {dict(request.headers)}")
    if request.data:
        print(f"‚û°Ô∏è –¢–µ–ª–æ –∑–∞–ø—Ä–æ—Å–∞: {request.data.decode('utf-8', errors='ignore')}")
    print("----------------------\n")


# üü¢ –ü—Ä–æ–≤–µ—Ä–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞
@app.route("/")
def index():
    return "‚úÖ Bitrix Bot Server —Ä–∞–±–æ—Ç–∞–µ—Ç!"


# üöÄ –ú–∞—Ä—à—Ä—É—Ç —É—Å—Ç–∞–Ω–æ–≤–∫–∏
@app.route("/install", methods=["GET", "POST"])
def install():
    """
    –ü—Ä–∏ —É—Å—Ç–∞–Ω–æ–≤–∫–µ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è –ë–∏—Ç—Ä–∏–∫—Å –Ω–∞–ø—Ä–∞–≤–ª—è–µ—Ç –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è —Å—é–¥–∞.
    """
    if not CLIENT_ID:
        return "–û—à–∏–±–∫–∞: –ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è BITRIX_CLIENT_ID –Ω–µ –∑–∞–¥–∞–Ω–∞", 500

    auth_url = (
        f"{BITRIX_DOMAIN}/oauth/authorize/"
        f"?client_id={CLIENT_ID}"
        f"&response_type=code"
        f"&redirect_uri={REDIRECT_URI}"
    )
    print(f"üîó –ü–µ—Ä–µ–Ω–∞–ø—Ä–∞–≤–ª—è–µ–º –Ω–∞ –∞–≤—Ç–æ—Ä–∏–∑–∞—Ü–∏—é: {auth_url}")
    return redirect(auth_url)


# üîÑ Callback –æ—Ç –ë–∏—Ç—Ä–∏–∫—Å (GET –∏–ª–∏ POST)
@app.route("/oauth/bitrix/callback", methods=["GET", "POST"])
def oauth_callback():
    """
    –ë–∏—Ç—Ä–∏–∫—Å –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç code —Å—é–¥–∞.
    """
    code = request.args.get("code") or request.form.get("code")

    if not code:
        return "‚ùå –û—à–∏–±–∫–∞: –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç –ø–∞—Ä–∞–º–µ—Ç—Ä code", 400

    token_url = f"{BITRIX_DOMAIN}/oauth/token/"

    data = {
        "grant_type": "authorization_code",
        "client_id": CLIENT_ID,
        "client_secret": CLIENT_SECRET,
        "redirect_uri": REDIRECT_URI,
        "code": code,
    }

    print(f"üîë –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –∑–∞–ø—Ä–æ—Å –Ω–∞ –ø–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ–∫–µ–Ω–∞: {token_url}")
    try:
        r = requests.post(token_url, data=data, timeout=10)
        print(f"üì® –û—Ç–≤–µ—Ç Bitrix: {r.text}")
        result = r.json()

        # üíæ –°–æ—Ö—Ä–∞–Ω—è–µ–º —Ç–æ–∫–µ–Ω –≤ —Ñ–∞–π–ª
        with open("token.json", "w", encoding="utf-8") as f:
            json.dump(result, f, ensure_ascii=False, indent=2)

        return jsonify(result)

    except Exception as e:
        return jsonify({"error": str(e)}), 500


# üîç –§–æ–ª–±—ç–∫ –Ω–∞ –≤—Å–µ –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –ø—É—Ç–∏ (–¥–ª—è –æ—Ç–ª–∞–¥–∫–∏)
@app.route("/<path:unknown>", methods=["GET", "POST"])
def catch_all(unknown):
    return f"–ü—É—Ç—å '{unknown}' –Ω–µ –æ–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ—Ç—Å—è —ç—Ç–∏–º —Å–µ—Ä–≤–µ—Ä–æ–º.", 404


if __name__ == "__main__":
    app.run(host="0.0.0.0", port=10000)
